<!doctype html>
<html lang="en">
 <head>
 <meta charset="UTF-8">
<link rel="stylesheet" href="https://uicdn.toast.com/tui-grid/latest/tui-grid.css" />
<script src="https://uicdn.toast.com/tui-grid/latest/tui-grid.js"></script>
<script src="https://unpkg.com/@babel/standalone@7.6.2/babel.min.js"></script>
 <title>Document</title>
 <script type="text/babel">
 function fnTest(){
	 alert('button test');
}
 function addRow(){
	 var row ={
      c1: '',
      c2: '',
      c3: 1
    }
	grid.appendRow(row);
	var gn =  grid.getRowCount();
	grid.startEditing(gn-1, 'c1', true);
 }
 </script>
</head>

<body>

 <p>grid test</p>
 <button id="addBtn" onclick="addRow();">ADD</button>
  <div id="grid"></div>
<script>
  var Grid = tui.Grid;
  class CustomButtonRenderer {
		constructor(props) {
			const el = document.createElement('input');
			const { value, onclick } = props.columnInfo.renderer.options;

			el.type = 'button';
			el.value = String(value);
			el.addEventListener('click', (ev) => {
			  fnTest();
			});

			this.el = el;
			this.render(props);
		}

		getElement() {
			return this.el;
		}

		render(props) {
			//this.el.value = value;
			//this.el.onclick = fnTest();
		}
	}
	const gridData = [
    {
      c1: '100013',
      c2: 'Mustafa Cosme',
      c3: 291232
    },
    {
      c1: '201212',
      c2: 'Gunnar Fausto',
      c3: 32123
    }
  ];

  const grid = new tui.Grid({
    el: document.getElementById('grid'),
    scrollX: false,
    scrollY: false,
    rowHeight: 35,
	data: gridData,
    rowHeaders: ['rowNum'],
    header: {
      height: 40
    },
    columns: [
      {
        header: 'ID',
        name: 'c1',
		editor : 'text',
		onAfterChange(ev){
			alert('1');
		}
      },
      {
        header: 'Name',
        defaultValue: 2,
        name: 'c2',
		editor : 'text'
      },
      {
        header: 'Score',
        name: 'c3',
		renderer: {
					type: CustomButtonRenderer,
					options: {
						value: 'link',
						onclick: 'fnTest()'
					}
				}
      }
    ]
  });

 </script>
</body>
</html>
